version: '3.8'

volumes:
  database-data:
  uploads:
  node_modules:

networks:
  stack:
    name: stack
    external: false

services:
  database:
    container_name: database
    image: postgres:14-alpine
    restart: always
    volumes:
      - database-data:/var/lib/postgresql/data/
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - stack
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  calcom:
    build:
      context: https://github.com/kelvinrrivera/cal-docker.git#main
      args:
        NEXT_PUBLIC_WEBAPP_URL: ${NEXT_PUBLIC_WEBAPP_URL}
        NEXT_PUBLIC_API_V2_URL: ${NEXT_PUBLIC_API_V2_URL}
        NEXT_PUBLIC_LICENSE_CONSENT: ${NEXT_PUBLIC_LICENSE_CONSENT}
        CALCOM_TELEMETRY_DISABLED: ${CALCOM_TELEMETRY_DISABLED}
    restart: always
    volumes:
      - uploads:/app/public/uploads
      - node_modules:/app/node_modules
    networks:
      - stack
    ports:
      - "3000:3000"
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      - DATABASE_DIRECT_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      - NODE_ENV=production
    depends_on:
      database:
        condition: service_healthy
